name: Deploy NGINX Ingress Controller

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform'
        required: true
        default: 'apply'
        type: choice
        options:
          - apply
          - destroy
      cluster_ip:
        description: 'Kubernetes cluster IP address'
        required: true
        type: string

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/nginx-ingress-deployer
  KUBE_NAMESPACE: deployment-automation

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      image: ${{ steps.image.outputs.image }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
      
      - name: Set image output
        id: image
        run: echo "image=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest" >> $GITHUB_OUTPUT

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBE_CONFIG }}" | base64 --decode > ~/.kube/config
          chmod 600 ~/.kube/config
          
      - name: Ensure service account exists
        run: |
          # Create the namespace if it doesn't exist
          kubectl get namespace ${{ env.KUBE_NAMESPACE }} || kubectl create namespace ${{ env.KUBE_NAMESPACE }}
          
          # Apply the service account and RBAC configuration
          kubectl apply -f k8s/service-account.yaml

      - name: Deploy
        run: |
          ACTION="${{ github.event.inputs.action || 'apply' }}"
          IMAGE="${{ needs.build.outputs.image }}"
          CLUSTER_IP="${{ github.event.inputs.cluster_ip }}"
          
          # Process the job yaml with environment variables
          cat k8s/deployment-job.yaml | \
            sed "s|IMAGE_PLACEHOLDER|$IMAGE|g" | \
            sed "s|ACTION_PLACEHOLDER|$ACTION|g" | \
            sed "s|CLUSTER_IP_PLACEHOLDER|$CLUSTER_IP|g" | \
            kubectl apply -f -
          
          echo "Job deployed to cluster using service account"

      - name: Monitor
        run: |
          ACTION="${{ github.event.inputs.action || 'apply' }}"
          
          echo "Waiting for job to complete..."
          kubectl wait --for=condition=complete job/nginx-ingress-deployment-$ACTION -n ${{ env.KUBE_NAMESPACE }} --timeout=900s
          
          echo "Job logs:"
          kubectl logs job/nginx-ingress-deployment-$ACTION -n ${{ env.KUBE_NAMESPACE }}
          
          if [ "$ACTION" = "apply" ]; then
            echo "Checking NGINX Ingress status..."
            kubectl get pods -n ingress-nginx
            kubectl get svc -n ingress-nginx
          fi
