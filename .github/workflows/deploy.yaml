name: Deploy NGINX Ingress Controller

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform'
        required: true
        default: 'apply'
        type: choice
        options:
          - apply
          - destroy

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/nginx-ingress-deployer

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      image: ${{ steps.image.outputs.image }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
      
      - name: Set image output
        id: image
        run: echo "image=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest" >> $GITHUB_OUTPUT

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "${{ secrets.SSH_KNOWN_HOSTS }}" > ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts

      - name: Deploy
        run: |
          ACTION="${{ github.event.inputs.action || 'apply' }}"
          IMAGE="${{ needs.build.outputs.image }}"
          
          sed "s|IMAGE_PLACEHOLDER|$IMAGE|g" k8s/deployment-job.yaml > /tmp/job.yaml
          sed -i "s|ACTION_PLACEHOLDER|$ACTION|g" /tmp/job.yaml
          sed -i "s|TARGET_USER_PLACEHOLDER|${{ secrets.TARGET_USER }}|g" /tmp/job.yaml
          
          scp -i ~/.ssh/id_rsa /tmp/job.yaml ${{ secrets.TARGET_USER }}@${{ secrets.TARGET_HOST }}:/tmp/
          
          ssh -i ~/.ssh/id_rsa ${{ secrets.TARGET_USER }}@${{ secrets.TARGET_HOST }} "
            kubectl create namespace deployment-automation --dry-run=client -o yaml | kubectl apply -f -
            kubectl create configmap deployment-config --from-literal=cluster_ip=${{ secrets.TARGET_HOST }} -n deployment-automation --dry-run=client -o yaml | kubectl apply -f -
            kubectl delete job nginx-ingress-deployment-$ACTION -n deployment-automation --ignore-not-found=true
            kubectl apply -f /tmp/job.yaml
            rm /tmp/job.yaml
          "

      - name: Monitor
        run: |
          ACTION="${{ github.event.inputs.action || 'apply' }}"
          
          ssh -i ~/.ssh/id_rsa ${{ secrets.TARGET_USER }}@${{ secrets.TARGET_HOST }} "
            kubectl wait --for=condition=complete job/nginx-ingress-deployment-$ACTION -n deployment-automation --timeout=600s
            kubectl logs job/nginx-ingress-deployment-$ACTION -n deployment-automation
          "
