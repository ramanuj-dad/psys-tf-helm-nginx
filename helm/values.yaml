# NGINX Ingress Controller Helm Values
# Optimized for bare-metal single-node Kubernetes cluster

controller:
  # Use DaemonSet for bare-metal to ensure ingress runs on all nodes
  kind: DaemonSet
  
  # Resource configuration for single-node setup
  resources:
    limits:
      cpu: 1000m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi
  
  # Enable host ports for direct access (bare-metal setup)
  hostPort:
    enabled: true
    ports:
      http: 80
      https: 443
  
  # Service configuration for NodePort (since no LoadBalancer in bare-metal)
  service:
    type: NodePort
    nodePorts:
      http: 30080
      https: 30443
    # External IP will be set via Terraform variable
  
  # Node selection and scheduling
  nodeSelector:
    kubernetes.io/os: linux
  
  # Tolerations for single-node cluster (control-plane taints)
  tolerations:
    - key: "node-role.kubernetes.io/control-plane"
      operator: "Equal"
      effect: "NoSchedule"
    - key: "node-role.kubernetes.io/master"
      operator: "Equal"
      effect: "NoSchedule"
    - key: "node.kubernetes.io/not-ready"
      operator: "Exists"
      effect: "NoExecute"
      tolerationSeconds: 300
    - key: "node.kubernetes.io/unreachable"
      operator: "Exists"
      effect: "NoExecute"
      tolerationSeconds: 300
  
  # Affinity rules (optional, for single-node this is less relevant)
  affinity: {}
  
  # Enable metrics for monitoring
  metrics:
    enabled: true
    serviceMonitor:
      enabled: false  # Set to true if you have Prometheus operator
  
  # Configuration for better performance on single-node
  config:
    # Increase worker processes for better performance
    worker-processes: "2"
    # Enable gzip compression
    use-gzip: "true"
    # Set appropriate client limits
    client-max-body-size: "20m"
    # Proxy timeouts
    proxy-connect-timeout: "5"
    proxy-send-timeout: "60"
    proxy-read-timeout: "60"
    # SSL configuration
    ssl-protocols: "TLSv1.2 TLSv1.3"
    ssl-ciphers: "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384"
  
  # Admission webhooks configuration
  admissionWebhooks:
    enabled: true
    patch:
      enabled: true
      image:
        tag: "v1.3.0"
  
  # Update strategy for DaemonSet
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1

# Default backend configuration (optional)
defaultBackend:
  enabled: true
  image:
    tag: "1.5"
  resources:
    limits:
      cpu: 20m
      memory: 32Mi
    requests:
      cpu: 10m
      memory: 16Mi
  tolerations:
    - key: "node-role.kubernetes.io/control-plane"
      operator: "Equal"
      effect: "NoSchedule"
    - key: "node-role.kubernetes.io/master"
      operator: "Equal"
      effect: "NoSchedule"

# RBAC configuration
rbac:
  create: true
  scope: false  # Cluster-wide permissions

# Service account configuration
serviceAccount:
  create: true
  automountServiceAccountToken: true

# Pod Security Policy (if enabled in cluster)
podSecurityPolicy:
  enabled: false

# Network policy (optional)
networkPolicy:
  enabled: false

# Ingress class configuration
ingressClassResource:
  name: nginx
  enabled: true
  default: true
  controllerValue: "k8s.io/ingress-nginx"

# TCP/UDP service exposure (for non-HTTP services)
tcp: {}
udp: {}
