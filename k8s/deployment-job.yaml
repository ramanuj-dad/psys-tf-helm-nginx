apiVersion: batch/v1
kind: Job
metadata:
  name: nginx-ingress-deployment-ACTION_PLACEHOLDER
  namespace: deployment-automation
spec:
  ttlSecondsAfterFinished: 3600
  backoffLimit: 1
  template:
    spec:
      restartPolicy: Never
      containers:
      - name: deployer
        image: IMAGE_PLACEHOLDER
        env:
        - name: ACTION
          value: "ACTION_PLACEHOLDER"
        - name: CLUSTER_IP
          valueFrom:
            configMapKeyRef:
              name: deployment-config
              key: cluster_ip
        command: ["/bin/bash", "-c"]
        args:
        - |
          set -e
          echo "üöÄ NGINX Ingress Deployment Started"
          echo "Action: $ACTION"
          echo "Cluster IP: $CLUSTER_IP"
          
          cd /workspace
          
          if [ "$ACTION" = "apply" ]; then
            echo "üìã Applying Terraform..."
            cd terraform
            terraform init
            terraform apply -auto-approve -var="cluster_ip=$CLUSTER_IP"
            cd ..
            
            echo "üìã Installing NGINX Ingress with Helm..."
            helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
            helm repo update
            helm upgrade --install nginx-ingress ingress-nginx/ingress-nginx \
              --namespace ingress-nginx \
              --create-namespace \
              --values helm/values.yaml \
              --wait
            
            echo "‚úÖ Deployment completed!"
            kubectl get pods -n ingress-nginx
            
          elif [ "$ACTION" = "destroy" ]; then
            echo "üóëÔ∏è Destroying NGINX Ingress..."
            helm uninstall nginx-ingress -n ingress-nginx || true
            cd terraform
            terraform init
            terraform destroy -auto-approve -var="cluster_ip=$CLUSTER_IP" || true
            cd ..
            kubectl delete namespace ingress-nginx --ignore-not-found=true
            echo "‚úÖ Destruction completed!"
          fi
        volumeMounts:
        - name: kube-config
          mountPath: /root/.kube
      volumes:
      - name: kube-config
        hostPath:
          path: /home/TARGET_USER_PLACEHOLDER/.kube
